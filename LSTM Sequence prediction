import numpy as np
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense

# Step 1: Prepare the data

# This function turns a long sequence into many shorter input-output pairs.
def create_sequence(data, n_steps):
    X, y = [], []
    for i in range(len(data) - n_steps):
        X.append(data[i:i + n_steps])   # e.g., [1, 2, 3]
        #print("X: ", X)
        y.append(data[i + n_steps])     # e.g., 4
        #print("y: ", y)
    return np.array(X), np.array(y)

# Sequence and window size
sequence = np.array([i for i in range(1, 21)])  # [1, 2, ..., 20]
n_steps = 3

X, y = create_sequence(sequence, n_steps)

# Step 2. Reshape for LSTM: [samples, timesteps, features]
X = X.reshape((X.shape[0], X.shape[1], 1))

# Step 3: Define the model
model = Sequential()
model.add(LSTM(50, activation='relu', input_shape=(n_steps, 1)))
model.add(Dense(1))
model.compile(optimizer='adam', loss='mse')

# Step 4: Train the model
model.fit(X, y, epochs=200, verbose=0)

# Step 5: Make a prediction
test_input = np.array([19, 20, 21])
test_input = test_input.reshape((1, n_steps, 1))
predicted = model.predict(test_input, verbose=0)
print("Next number prediction:", predicted[0][0])
